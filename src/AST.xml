<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOP><VarDeclOP>(int)<IdInitOP><AssignOP>(ID, n)(INT_CONST, 1)</AssignOP></IdInitOP></VarDeclOP><ProcOP>(ID, main)<ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><VarDeclOP>(int)<IdInitOP>(ID, operazione)</IdInitOP><IdInitOP><AssignOP>(ID, tipo_num)(INT_CONST, 0)</AssignOP></IdInitOP></VarDeclOP><VarDeclOP>(int)<IdInitOP>(ID, x)</IdInitOP><IdInitOP><AssignOP>(ID, y)(INT_CONST, 0)</AssignOP></IdInitOP></VarDeclOP><VarDeclOP>(float)<IdInitOP>(ID, z)</IdInitOP><IdInitOP><AssignOP>(ID, w)(FLOAT_CONST, 0.0)</AssignOP></IdInitOP></VarDeclOP><VarDeclOP>(bool)<IdInitOP><AssignOP>(ID, flag)(FALSE)</AssignOP></IdInitOP></VarDeclOP>WhileOP<ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP><ProcOP>(ID, calcola_int)<ParDeclOP>(int)(ID, x)(ID, y)(ID, operazione)</ParDeclOP><ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><VarDeclOP>(int)<IdInitOP><AssignOP>(ID, result)(INT_CONST, 0)</AssignOP></IdInitOP></VarDeclOP>IfOPWriteOp<ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP><ProcOP>(ID, calcola_double)<ParDeclOP>(float)(ID, x)(ID, y)(ID, operazione)</ParDeclOP><ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><VarDeclOP>(float)<IdInitOP><AssignOP>(ID, result)(FLOAT_CONST, 0.0)</AssignOP></IdInitOP></VarDeclOP>IfOPWriteOp<ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP></ProgramOP>