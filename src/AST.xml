<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOP><ProcOP>(ID, main)<ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><VarDeclOP>(int)<IdInitOP><AssignOP>(ID, n)(INT_CONST, 0)</AssignOP></IdInitOP></VarDeclOP><WriteOP>(STRING_CONST, How many pegs? )</WriteOP><ReadlnOP>(ID, n)</ReadlnOP><CallProcOP>(ID, hanoi)<ParamOP>(INT_CONST, 3)(INT_CONST, 2)(INT_CONST, 1)(ID, n)</ParamOP></CallProcOP><ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP><ProcOP>(ID, hanoi)<ParDeclOP>(int)(ID, n)(ID, fromPeg)(ID, usingPeg)(ID, toPeg)</ParDeclOP><ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><IfOP><NeOP>(ID, n)(INT_CONST, 0)</NeOP><BodyOP><CallProcOP>(ID, hanoi)<ParamOP>(ID, usingPeg)(ID, toPeg)(ID, fromPeg)<MinusOP>(ID, n)(INT_CONST, 1)</MinusOP></ParamOP></CallProcOP><WriteOP>(STRING_CONST, Move disk from )</WriteOP><CallProcOP>(ID, printPeg)<ParamOP>(ID, fromPeg)</ParamOP></CallProcOP><WriteOP>(STRING_CONST,  peg to )</WriteOP><CallProcOP>(ID, printPeg)<ParamOP>(ID, toPeg)</ParamOP></CallProcOP><WriteOP>(STRING_CONST,  peg.\n)</WriteOP><CallProcOP>(ID, hanoi)<ParamOP>(ID, toPeg)(ID, fromPeg)(ID, usingPeg)<MinusOP>(ID, n)(INT_CONST, 1)</MinusOP></ParamOP></CallProcOP></BodyOP></IfOP><ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP><ProcOP>(ID, printPeg)<ParDeclOP>(int)(ID, peg)</ParDeclOP><ResultTypeOP>(VOID)</ResultTypeOP><ProcBodyOP><IfOP><EqOP>(ID, peg)(INT_CONST, 1)</EqOP><BodyOP><WriteOP>(STRING_CONST, left)</WriteOP></BodyOP><ElifOP><EqOP>(ID, peg)(INT_CONST, 2)</EqOP><BodyOP><WriteOP>(STRING_CONST, center)</WriteOP></BodyOP></ElifOP><ElseOP><BodyOP><WriteOP>(STRING_CONST, right)</WriteOP></BodyOP></ElseOP></IfOP><ReturnExprsOP>(VOID)</ReturnExprsOP></ProcBodyOP></ProcOP></ProgramOP>